make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 09:17:29 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'Makefile', line 5)
SRC = $(basename $(COMP))
# environment
SNAP_COMMON = /var/snap/code/common
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# makefile (from 'Makefile', line 23)
COMPILER_CLEAN = lex.yy.c $(SRC).tab.c $(SRC).tab.h $(SRC).output $(SRC) *.?~ *.mc~ .make.out* *.asm Makefile~ *.txt~
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/zokster/Desktop/PP-Project/code-gen
# makefile (from 'Makefile', line 2)
SHELL = /bin/bash
# environment
SNAP_DATA = /var/snap/code/99
# environment
VTE_VERSION = 6003
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
JOURNAL_STREAM = 8:30417
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
IM_CONFIG_PHASE = 1
# makefile (from 'Makefile', line 4)
COMP = $(wildcard *.l)
# environment
USERNAME = zokster
# environment
MAKELEVEL := 0
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (from 'Makefile', line 10)
CGENH = codegen.h
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus,guid=85ae1af43094ac85acd25f1a62b6b2d6
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
MANAGERPID = 977
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
LC_NAME = sr_RS
# environment
VSCODE_CWD = /home/zokster/Desktop/PP-Project/code-gen
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/99/usr/share/glib-2.0/schemas
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from 'Makefile', line 9)
CGENC = codegen.c
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
SESSION_MANAGER = local/zokster-VirtualBox:@/tmp/.ICE-unix/1236,unix/zokster-VirtualBox:/tmp/.ICE-unix/1236
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GDK_PIXBUF_MODULE_FILE = /home/zokster/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
SNAP = /snap/code/99
# environment
SNAP_VERSION = 30d9c6cd
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
DISABLE_WAYLAND = 1
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
INVOCATION_ID = 4b8adacd83864c1e911fad5b2b927f37
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/99/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VSCODE_PIPE_LOGGING = true
# environment
SNAP_INSTANCE_KEY = 
# environment
PWD = /home/zokster/Desktop/PP-Project/code-gen
# default
.LOADED := 
# environment
SSH_AGENT_PID = 1196
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/zokster
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/zokster/.config/Code/CachedData/30d9c6cd9483b2cc586687151bcbcd635f373630
# environment
LOGNAME = zokster
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = oPCGDYjyin7NXMZjbVTFiLmYa4cACuba4CInCbRyr8b4FZQUuc89
# automatic
+F = $(notdir $+)
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
SNAP_USER_COMMON = /home/zokster/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 25)
TEST = ""
# environment
LC_TIME = sr_RS
# environment
SNAP_REAL_HOME = /home/zokster
# environment
COLORTERM = truecolor
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SNAP_USER_DATA = /home/zokster/snap/code/99
# environment
SHLVL = 1
# makefile (from 'Makefile', line 8)
ASM = true
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-5588094c-6666-4d05-876c-df5aef3a2d89.sock
# default
MAKE_VERSION := 4.2.1
# environment
USER = zokster
# environment
SNAP_REVISION = 99
# environment
LC_MONETARY = sr_RS
# makefile
.DEFAULT_GOAL := micko
# environment
XDG_CURRENT_DESKTOP = Unity
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
LC_TELEPHONE = sr_RS
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-0a1d52d2-1.68.1-main.sock
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 21)
COMPILER_DEPENDS = $(COMPILER_BUILD) defs.h symtab.h $(CGENH)
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# environment
LC_PAPER = sr_RS
# makefile (from 'Makefile', line 14)
COMPILE_SIM = $(wildcard ./hipsim-src/Makefile)
# environment
QT_ACCESSIBILITY = 1
# default
MAKEFILES := 
# environment
SNAP_COOKIE = oPCGDYjyin7NXMZjbVTFiLmYa4cACuba4CInCbRyr8b4FZQUuc89
# environment
LC_NUMERIC = sr_RS
# automatic
<F = $(notdir $<)
# environment
LC_MEASUREMENT = sr_RS
# environment
SNAP_NAME = code
# environment
LC_ALL = C
# environment
DBUS_STARTER_BUS_TYPE = session
# environment
GNOME_TERMINAL_SCREEN = /org/gnome/Terminal/screen/23070ced_6b72_4743_ad31_969f76026f9a
# automatic
^F = $(notdir $^)
# environment
GNOME_TERMINAL_SERVICE = :1.76
# default
SUFFIXES := 
# makefile (from 'Makefile', line 19)
COMPILER_BUILD = lex.yy.c $(SRC).tab.c symtab.c $(CGENC)
# environment
SNAP_REEXEC = 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
 
# environment
LC_IDENTIFICATION = sr_RS
# default
.RECIPEPREFIX := 
# environment
LC_ADDRESS = sr_RS
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 3707
# environment
DBUS_STARTER_ADDRESS = unix:path=/run/user/1000/bus,guid=85ae1af43094ac85acd25f1a62b6b2d6
# variable set hash-table stats:
# Load=140/1024=14%, Rehash=0, Collisions=29/188=15%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2053, inode 1181921): 19 files, no impossibilities.

# 19 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

micko.tab.c: micko.y
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 54):
	@echo -e "\e[01;32mBISON...\e[00m"
	@bison -d -v $< 2>&1 | tee .make.outb; exit $${PIPESTATUS[0]}

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

.PHONY: clean test det archive help
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
codegen.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
symtab.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2019-11-06 14:58:56
#  File has been updated.
#  Successfully updated.

# Not a target:
codegen.h:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test: micko
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 146):
	@if [ ! -f $(SRC) ]; then exit 1; fi
	@echo -e "\n\e[01;36mRunning compiler with test files...\e[00m\n"
	@if [ "$$TEST" != "" ]; then all_tests=$$TEST; \
	else all_tests=test*.mc; fi; \
	RESULTP="\e[01;32mPASSED\e[00m"; \
	RESULTF="\e[01;31mFAILED\e[00m"; \
	for test in $$all_tests; do \
		RESULT=$$RESULTP; \
		if [[ $$test =~ .*synerr.* ]]; then echo -e -n "\e[01;35m"; ttyp="syn"; \
		elif [[ $$test =~ .*semerr.* ]]; then echo -e -n "\e[01;34m"; ttyp="sem"; \
		elif [[ $$test =~ .*sanity.* ]]; then echo -e -n "\e[01;32m"; ttyp="san"; \
		elif [[ $$test =~ .*warn.* ]]; then echo -e -n "\e[01;33m"; ttyp="war"; \
		else echo -e -n "\e[01;36m"; ttyp="ok"; fi; \
		RETURN=$$(grep "//RETURN:" "$$test"); \
		RETURN=$${RETURN#*:}; \
		RETURN=$$(echo "$$RETURN" | xargs); \
		./$(SRC) < "$$test" 1>/dev/null 2>/dev/null; \
		out=$$?; \
		if [ $$ttyp == "ok" ] && [ $$out -ne 0 ]; then \
			RESULT=$$RESULTF; \
		elif [ $$ttyp == "war" ] && ([ $$out -lt 128 ] || [ $$out -eq 255 ]); then \
			RESULT=$$RESULTF; \
		elif [ $$ttyp == "san" ] && [ $$out -ne 0 ]; then \
			RESULT=$$RESULTF; \
		elif [ $$ttyp == "sem" ] && ([ $$out -eq 0 ] || [ $$out -gt 127 ]); then \
			RESULT=$$RESULTF; \
		elif [ $$ttyp == "syn" ] && [ $$out -ne 255 ]; then \
			RESULT=$$RESULTF; \
		elif [ "$(ASM)" == "true" ] && [ $$out -eq 0 ]; then \
			outname=$$(basename $$test); \
			outname=$${outname%.*}; \
			mv output.asm "$${outname}.asm"; \
			if [ -f $${outname}.asm.ok ]; then \
				diff -w -B "$${outname}.asm" "$${outname}.asm.ok" > /dev/null; \
				if [ $$? -ne 0 ]; then \
					if [[ $$ttyp == "san" ]]; then \
						RESULT=$$RESULTF; \
					else \
						RESULT=$$RESULTF; \
					fi; \
				fi; \
			elif [ "$$RETURN" != "" ]; then \
				RETVAL=$$(./hipsim -r -s 500 < "$${outname}.asm" 2>/dev/null); \
				CODE=$$?; \
				if [ $$CODE -ne 0 ]; then \
					if [ $$CODE -eq 4 ]; then \
						RESULT=$$RESULTF; \
					elif [ $$CODE -eq 3 ]; then \
						RESULT=$$RESULTF; \
					else \
						RESULT=$$RESULTF; \
					fi; \
				else \
					if ! [ "$$RETVAL" == "$$RETURN" ]; then \
						RESULT=$$RESULTF; \
					fi; \
				fi; \
			fi; \
		fi; \
		echo -e "$$test: $$RESULT"; \
	done; \
	echo -e "\n\e[01;31mAttention: \e[01;36mtests with errors are valid \e[01;32monly if\e[01;36m ok tests are passed!\e[00m"; \
	echo -e "\n\e[01;36mRun \e[01;32mmake det\e[01;36m for detailed results.\e[00m\n"

archive: clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 66):
	@arc=`pwd`; \
	arc=`basename "$$arc"`; \
	echo -e "\e[01;32mCreating archive ../$$arc.tar.gz\e[00m"; \
	tar --exclude=*.gz -czf ../$$arc.tar.gz ../$$arc

# Not a target:
symtab.h:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
micko.l:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

micko: lex.yy.c micko.tab.c symtab.c codegen.c defs.h symtab.h codegen.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 32):
	@if [ "$(COMPILE_SIM)" != "" ]; then \
		echo -e "\e[01;32mSIMULATOR...\e[00m"; \
		make --silent -C ./hipsim-src/ SIMULATOR_PATH=../; \
	fi
	@echo -e "\e[01;32mGCC...\e[00m"
	@-rm -f $(SRC) .make.out2 2>/dev/null
	@gcc -o $@ $(COMPILER_BUILD) 2>&1 | tee .make.outg; pstat=$${PIPESTATUS[0]}; \
	cat .make.outf .make.outb .make.outg > .make.out 2>/dev/null; \
	out=`grep -Ei "conflict|warning|error" .make.out 2>/dev/null`; \
	if [ "$$out" != "" ]; then \
		cat .make.outf .make.outb; \
		echo -e "\e[01;31m\nThere are errors/warnings in grammar/actions!\n\e[00m" ; \
		rm -f $(SRC) 2>/dev/null ; \
		exit 1; \
	fi; \
	exit $$pstat

# Not a target:
micko.y:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 211):
	@echo -e "\n\e[01;36mKompajliranje programa\e[00m"
	@echo -e "    \e[01;32mmake\e[00m"
	@echo -e "\n\e[01;36mBrisanje automatski generisanih fajlova\e[00m"
	@echo -e "    \e[01;32mmake clean\e[00m"
	@echo -e "\n\e[01;36mPokretanje svih testova sa kratkim ispisom\e[00m"
	@echo -e "    \e[01;32mmake test\e[00m"
	@echo -e "\n\e[01;36mPokretanje svih testova sa detaljnim ispisom\e[00m"
	@echo -e "    \e[01;32mmake det\e[00m"
	@echo -e "\n\e[01;36mPokretanje samo nekih testova\e[00m"
	@echo -e "    \e[01;32mmake test TEST=test-ok1.mc\e[00m"
	@echo -e "    \e[01;32mmake det TEST=\"test-ok1.mc test-ok2.mc\"\e[00m"
	@echo -e "\n\e[01;36mNazivi test fajlova treba da slede sledeću konvenciju:\e[00m"
	@echo -e "  \e[01;35mPočetak naziva  Značenje\e[00m"
	@echo -e "    \e[01;36mtest-sanity\e[00m - korektan miniC program bez novih konstrukcija"
	@echo -e "                  (provera originalne gramatike)"
	@echo -e "    \e[01;36mtest-ok\e[00m ----- korektan miniC program sa novim konstrukcijama"
	@echo -e "                  - ukoliko sadrži komentar \e[01;36m//RETURN: <num>\e[00m, nakon"
	@echo -e "                    generisanja koda će se proveriti da li se povratna"
	@echo -e "                    vrednost izgenerisanog koda poklapa sa navedenom"
	@echo -e "    \e[01;36mtest-warn\e[00m --- nekorektan miniC program sa jednim upozorenjem"
	@echo -e "    \e[01;36mtest-semerr\e[00m - nekorektan miniC program sa jednom semantičkom greškom"
	@echo -e "    \e[01;36mtest-synerr\e[00m - nekorektan miniC program sa jednom sintaksnom greškom"
	@echo -e "Ukoliko se u test fajlu nalazi red koji počinje sa \e[01;36m//OPIS: <tekst>\e[00m, ta linija"
	@echo -e "će biti ispisana pre testa.\n"

lex.yy.c: micko.l micko.tab.c
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 50):
	@echo -e "\e[01;32mFLEX...\e[00m"
	@flex $< 2>&1 | tee .make.outf; exit $${PIPESTATUS[0]}

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 58):
	@echo -e "\e[01;32mDeleting temporary files...\e[00m"
	@rm -f $(COMPILER_CLEAN)
	@rm -f hipsim
	@if [ -f ./hipsim-src/Makefile ]; then \
	    make --silent -C ./hipsim-src/ clean ; \
	fi

det: micko
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 77):
	@if [ ! -f $(SRC) ]; then exit 1; fi
	@echo -e "\n\e[01;36mRunning compiler with test files...\e[00m"
	@if [ "$$TEST" != "" ]; then all_tests=$$TEST; \
	else all_tests=test*.mc; fi; \
	for test in $$all_tests; do \
		if [[ $$test =~ .*synerr.* ]]; then echo -e "\e[01;35m"; ttyp="syn"; \
		elif [[ $$test =~ .*semerr.* ]]; then echo -e "\e[01;34m"; ttyp="sem"; \
		elif [[ $$test =~ .*sanity.* ]]; then echo -e "\e[01;32m"; ttyp="san"; \
		elif [[ $$test =~ .*warn.* ]]; then echo -e "\e[01;33m"; ttyp="war"; \
		else echo -e "\e[01;36m"; ttyp="ok"; fi; \
		echo -e "\n\n------------------------\nTesting: $$test"; \
		grep "//OPIS:" $$test; \
		echo -e "------------------------\e[00m"; \
		RETURN=$$(grep "//RETURN:" "$$test"); \
		RETURN=$${RETURN#*:}; \
		RETURN=$$(echo "$$RETURN" | xargs); \
		./$(SRC) < "$$test"; \
		out=$$?; \
		if [ $$ttyp == "ok" ] && [ $$out -ne 0 ]; then \
			echo -e "\e[01;31m\nError/warning reported for '$$test'!\n\e[00m" ; \
		elif [ $$ttyp == "war" ] && ([ $$out -lt 128 ] || [ $$out -eq 255 ]); then \
			echo -e "\e[01;31m\nWarning not reported for '$$test'!\n\e[00m" ; \
		elif [ $$ttyp == "san" ] && [ $$out -ne 0 ]; then \
			echo -e "\e[01;31m\nOriginal miniC grammar is corrupted!\n\e[00m" ; \
		elif [ $$ttyp == "sem" ] && ([ $$out -eq 0 ] || [ $$out -gt 127 ]); then \
			echo -e "\e[01;31m\nSemantic error not reported for '$$test'!\n\e[00m" ; \
		elif [ $$ttyp == "syn" ] && [ $$out -ne 255 ]; then \
			echo -e "\e[01;31m\nSyntax error not reported for '$$test'!\n\e[00m" ; \
		elif [ "$(ASM)" == "true" ] && [ $$out -eq 0 ]; then \
			outname=$$(basename $$test); \
			outname=$${outname%.*}; \
			mv output.asm "$${outname}.asm"; \
			echo -e "output.asm saved as \e[01;34m$${outname}.asm\n\e[00m"; \
			if [ -f $${outname}.asm.ok ]; then \
				diff -w -B "$${outname}.asm" "$${outname}.asm.ok" > /dev/null; \
				if [ $$? -ne 0 ]; then \
					if [[ $$ttyp == "san" ]]; then \
						echo -e "\e[01;31m\nASM code generation for original miniC is changed!"; \
					else \
						echo -e "\e[01;31m\nASM code differs from expected!"; \
					fi; \
					echo -e "Run\e[00m fldiff $${outname}.asm $${outname}.asm.ok"; \
				fi; \
			elif [ "$$RETURN" != "" ]; then \
				echo -e "\e[01;34mRunning simulator...\e[00m"; \
				RETVAL=$$(./hipsim -r -s 500 < "$${outname}.asm"); \
				CODE=$$?; \
				if [ $$CODE -ne 0 ]; then \
					if [ $$CODE -eq 4 ]; then \
						echo -e -n "\n\n\e[01;31mASM code has an infinite loop (didn't finish in 500 steps).\e[00m"; \
					elif [ $$CODE -eq 3 ]; then \
						echo -e -n "\n\n\e[01;31mASM code produced illegal operation.\e[00m"; \
					else \
						echo -e -n "\n\n\e[01;31mErrors found in generated ASM code.\e[00m"; \
					fi; \
				else \
					if [ "$$RETVAL" == "$$RETURN" ]; then \
						echo -e -n "\e[01;32mReturn value: $$RETVAL\e[00m"; \
					else \
						echo -e -n "\e[01;31mReturn value: $$RETVAL\e[00m, should be $$RETURN."; \
					fi; \
				fi; \
			fi; \
		fi; \
	done; \
	echo

# Not a target:
defs.h:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=20/1024=2%, Rehash=0, Collisions=0/55=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 33 / storage = 282 B / avg = 8 B
# current buf: size = 8162 B / used = 282 B / count = 33 / avg = 8 B

# strcache performance: lookups = 64 / hit rate = 48%
# hash-table stats:
# Load=33/8192=0%, Rehash=0, Collisions=1/64=2%
# Finished Make data base on Sat Jun 25 09:17:29 2022

 
